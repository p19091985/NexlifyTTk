import tkinter as tk
from tkinter import ttk, font
from tkinter import scrolledtext
import sys

class GuiaConfigView(ttk.Frame):
    """
    A View que exibe o Guia de Configura√ß√£o: um guia detalhado e estilizado
    sobre as flags e modos de opera√ß√£o da aplica√ß√£o.
    """
    def __init__(self, parent, controller):
        super().__init__(parent)
        self.controller = controller

        main_frame = ttk.Frame(self, padding=20)
        main_frame.pack(fill="both", expand=True)

        titulo = ttk.Label(main_frame, text="‚öôÔ∏è Guia de Configura√ß√£o e Modos de Opera√ß√£o", font=("-size", 18, "-weight", "bold"))
        titulo.pack(pady=(0, 20), anchor="w")

                                       
        text_area = scrolledtext.ScrolledText(main_frame, wrap=tk.WORD, height=20,
                                              font=("Segoe UI", 10), bd=0, relief=tk.FLAT,
                                              padx=15, pady=15, background="white")
        text_area.pack(fill="both", expand=True, pady=10)

                                         
        code_font = "Consolas" if "Consolas" in font.families() else "Courier New"
        header_font_family = "Segoe UI Semibold" if "Segoe UI Semibold" in font.families() else "Segoe UI"
        subheader_font_family = "Segoe UI Semibold" if "Segoe UI Semibold" in font.families() else "Segoe UI"

        text_area.tag_configure("h1", font=(header_font_family, 16, "bold"), spacing1=20, spacing3=10, foreground="#003366")
        text_area.tag_configure("h2", font=(subheader_font_family, 13, "bold"), spacing1=15, spacing3=8, foreground="#005a9e")
        text_area.tag_configure("h3", font=("Segoe UI", 11, "bold"), spacing1=10, spacing3=5, foreground="#333333")
        text_area.tag_configure("code", font=(code_font, 9), background="#f5f5f5", wrap=tk.NONE,
                                lmargin1=25, lmargin2=25, borderwidth=1, relief=tk.SOLID,
                                spacing1=8, spacing3=8, tabs=("1c", "2c", "3c"))
        text_area.tag_configure("bold", font=("Segoe UI", 10, "bold"))
        text_area.tag_configure("italic", font=("Segoe UI", 10, "italic"))
        text_area.tag_configure("body", lmargin1=10, lmargin2=10, spacing3=6)
        text_area.tag_configure("note", lmargin1=20, lmargin2=20, foreground="#555555", font=("Segoe UI", 9, "italic"), spacing3=8)
        text_area.tag_configure("flag", font=(code_font, 10, "bold"), foreground="#cc0000")                          
        text_area.tag_configure("success", foreground="#155724", font=("Segoe UI", 10, "bold"))
        text_area.tag_configure("danger", foreground="#721c24", font=("Segoe UI", 10, "bold"))
        text_area.tag_configure("warning", foreground="#856404", font=("Segoe UI", 10, "bold"))
        text_area.tag_configure("info", foreground="#004085")

                                  

                    
        text_area.insert(tk.END, "Guia de Configura√ß√£o da Aplica√ß√£o\n", "h1")
        text_area.insert(tk.END,
                         "Esta aplica√ß√£o foi desenvolvida com flexibilidade. As flags de configura√ß√£o, localizadas no arquivo ", "body")
        text_area.insert(tk.END, "config.py", "code")
        text_area.insert(tk.END,
                         ", permitem ajustar o comportamento do sistema para cen√°rios de desenvolvimento, teste ou produ√ß√£o.\n\n", "body")
        text_area.insert(tk.END, "üõ°Ô∏è Sistema de Valida√ß√£o Integrado:\n", ("h3", "info"))
        text_area.insert(tk.END,
                         "Ao iniciar (`run.py`), um validador verifica a coer√™ncia das flags. Combina√ß√µes inv√°lidas (como exigir autentica√ß√£o sem um banco de dados) s√£o interceptadas, exibindo um alerta claro sobre a corre√ß√£o necess√°ria.\n", "body")

                                
        text_area.insert(tk.END, "1. Detalhamento das Flags (`config.py`)\n", "h2")
        text_area.insert(tk.END,
                         "Para alterar o modo de opera√ß√£o, edite os valores (`True` ou `False`) no arquivo ", "body")
        text_area.insert(tk.END, "config.py", "code")
        text_area.insert(tk.END, " e reinicie a aplica√ß√£o.\n\n", "body")

                          
        text_area.insert(tk.END, "DATABASE_ENABLED\n", "flag")
        text_area.insert(tk.END, "   ‚Ü≥ Controla a Conex√£o de Dados\n", "italic")
        text_area.insert(tk.END, "   ‚ñ™ ", "body")
        text_area.insert(tk.END, "True:", "bold")
        text_area.insert(tk.END, " (Produ√ß√£o / Dev Backend) Abre a conex√£o com o banco definido em ", "body")
        text_area.insert(tk.END, "banco.ini", "code")
        text_area.insert(tk.END, ". Fun√ß√µes que dependem de dados (CRUD, login) s√£o ativadas.\n", "body")
        text_area.insert(tk.END, "   ‚ñ™ ", "body")
        text_area.insert(tk.END, "False:", "bold")
        text_area.insert(tk.END, " (Dev Frontend / Offline) Desativa a conex√£o. A aplica√ß√£o opera sem banco, ideal para focar na interface. Funcionalidades de dados exibir√£o avisos.\n\n", "body")

                   
        text_area.insert(tk.END, "USE_LOGIN\n", "flag")
        text_area.insert(tk.END, "   ‚Ü≥ Controla a Autentica√ß√£o\n", "italic")
        text_area.insert(tk.END, "   ‚ñ™ ", "body")
        text_area.insert(tk.END, "True:", "bold")
        text_area.insert(tk.END, " (Produ√ß√£o) Exige que o usu√°rio se autentique. Permiss√µes de acesso s√£o aplicadas. ", "body")
        text_area.insert(tk.END, "Requer DATABASE_ENABLED = True.\n", ("body", "warning"))
        text_area.insert(tk.END, "   ‚ñ™ ", "body")
        text_area.insert(tk.END, "False:", "bold")
        text_area.insert(tk.END, " (Dev R√°pido) Pula a tela de login. O acesso √© concedido automaticamente com um usu√°rio mock de 'Administrador Global', acelerando testes internos.\n\n", "body")

                                        
        text_area.insert(tk.END, "INITIALIZE_DATABASE_ON_STARTUP\n", "flag")
        text_area.insert(tk.END, "   ‚Ü≥ Cria√ß√£o Autom√°tica do Schema (Somente SQLite)\n", "italic")
        text_area.insert(tk.END, "   ‚ñ™ ", "body")
        text_area.insert(tk.END, "True:", "bold")
        text_area.insert(tk.END, " (Setup Inicial / Testes) Se o arquivo SQLite estiver ausente ou vazio, cria as tabelas e dados iniciais do script ", "body")
        text_area.insert(tk.END, "sql_schema_SQLLite.sql", "code")
        text_area.insert(tk.END, ". ", "body")
        text_area.insert(tk.END, "Requer DATABASE_ENABLED = True.\n", ("body", "warning"))
        text_area.insert(tk.END, "   ‚ñ™ ", "body")
        text_area.insert(tk.END, "False:", "bold")
        text_area.insert(tk.END, " (Padr√£o Seguro / Produ√ß√£o) Assume que o banco de dados j√° existe e est√° pronto. Essencial para bancos de dados externos ou SQLite j√° populados.\n", "body")
        text_area.insert(tk.END, "      ‚Ü≥ ", "note")
        text_area.insert(tk.END, "N√£o use True em produ√ß√£o se o banco j√° cont√©m dados valiosos!\n\n", "note")

                                 
        text_area.insert(tk.END, "REDIRECT_CONSOLE_TO_LOG\n", "flag")
        text_area.insert(tk.END, "   ‚Ü≥ Direcionamento de Sa√≠da (Logs)\n", "italic")
        text_area.insert(tk.END, "   ‚ñ™ ", "body")
        text_area.insert(tk.END, "True:", "bold")
        text_area.insert(tk.END, " (Produ√ß√£o / Debug Centralizado) Sa√≠das do console (`print`, erros) s√£o redirecionadas para os arquivos de log rotativos em ", "body")
        text_area.insert(tk.END, "logs/", "code")
        text_area.insert(tk.END, ". Mant√©m o terminal limpo.\n", "body")
        text_area.insert(tk.END, "   ‚ñ™ ", "body")
        text_area.insert(tk.END, "False:", "bold")
        text_area.insert(tk.END, " (Debug R√°pido) As sa√≠das aparecem diretamente no terminal onde a aplica√ß√£o foi iniciada. √ötil para visibilidade imediata.\n\n", "body")

                         
        text_area.insert(tk.END, "2. Cen√°rios de Configura√ß√£o Comuns\n", "h2")

                           
        text_area.insert(tk.END, "‚úÖ Modo Produ√ß√£o (Ambiente Real)\n", ("h3", "success"))
        text_area.insert(tk.END, "   ‚Ü≥ Objetivo: Ambiente final, seguro, com dados reais e persistentes.\n", "body")
        text_area.insert(tk.END,
                         "DATABASE_ENABLED = True\n"
                         "USE_LOGIN = True\n"
                         "INITIALIZE_DATABASE_ON_STARTUP = False\n"
                         "REDIRECT_CONSOLE_TO_LOG = True", "code")
        text_area.insert(tk.END, "\n   ‚Ü≥ Comportamento: Exige login, conecta ao banco real, aplica permiss√µes, registra tudo em arquivos. M√°xima seguran√ßa e funcionalidade.\n\n", "body")

                              
        text_area.insert(tk.END, "‚úÖ Modo Desenvolvimento (Backend)\n", ("h3", "info"))
        text_area.insert(tk.END, "   ‚Ü≥ Objetivo: Desenvolver/testar l√≥gica de dados, servi√ßos, regras de neg√≥cio com acesso r√°pido.\n", "body")
        text_area.insert(tk.END,
                         "DATABASE_ENABLED = True\n"
                         "USE_LOGIN = False\n"
                         "INITIALIZE_DATABASE_ON_STARTUP = True  # Opcional, √≥timo com SQLite para reset\n"
                         "REDIRECT_CONSOLE_TO_LOG = False", "code")
        text_area.insert(tk.END, "\n   ‚Ü≥ Comportamento: Conecta ao banco (podendo recri√°-lo se SQLite+True), pula login (usu√°rio Admin mock). Ideal para testar CRUD e transa√ß√µes sem barreiras.\n\n", "body")

                               
        text_area.insert(tk.END, "‚úÖ Modo Desenvolvimento (Frontend/Offline)\n", ("h3", "info"))
        text_area.insert(tk.END, "   ‚Ü≥ Objetivo: Focar no design visual e experi√™ncia do usu√°rio (UI/UX) sem depend√™ncia do banco.\n", "body")
        text_area.insert(tk.END,
                         "DATABASE_ENABLED = False\n"
                         "USE_LOGIN = False\n"
                         "INITIALIZE_DATABASE_ON_STARTUP = False # Obrigat√≥rio!\n"
                         "REDIRECT_CONSOLE_TO_LOG = False", "code")
        text_area.insert(tk.END, "\n   ‚Ü≥ Comportamento: Opera√ß√£o sem banco. Login pulado. Pain√©is que precisam de dados exibir√£o avisos, mas a navega√ß√£o e a interface funcionar√£o.\n\n", "body")

                            
        text_area.insert(tk.END, "‚ùå Cen√°rios Inv√°lidos (Bloqueados Automaticamente)\n", ("h2", "danger"))
        text_area.insert(tk.END, "   ‚Ü≥ O validador (`run.py`) impede o in√≠cio se detectar estas combina√ß√µes:\n\n", "body")

        text_area.insert(tk.END, "Inv√°lido 1: Exigir Login Sem Banco de Dados\n", "h3")
        text_area.insert(tk.END,
                         "DATABASE_ENABLED = False\n"
                         "USE_LOGIN = True", "code")
        text_area.insert(tk.END, "\n   ‚Ü≥ Motivo: Imposs√≠vel validar um usu√°rio sem acesso ao banco de dados que cont√©m suas credenciais.\n\n", "body")

        text_area.insert(tk.END, "Inv√°lido 2: Inicializar Banco de Dados Desativado\n", "h3")
        text_area.insert(tk.END,
                         "DATABASE_ENABLED = False\n"
                         "INITIALIZE_DATABASE_ON_STARTUP = True", "code")
        text_area.insert(tk.END, "\n   ‚Ü≥ Motivo: N√£o se pode criar estruturas (`True`) se o acesso ao banco est√° desabilitado (`False`).\n\n", "body")

                     
        text_area.insert(tk.END, "--- Fim do Guia ---\n", ("italic", "body"))

                           
        text_area.config(state="disabled")